{"version":3,"sources":["services/phonebook.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","person","post","id","delete","updatedPerson","put","PersonForm","props","onSubmit","handleSubmit","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","FilterForm","filter","handleFilterChange","NumberList","persons","handleDelete","temp","name","toLowerCase","includes","map","number","Person","onClick","App","useState","setPersons","setNewName","setNewNumber","setFilter","message","setMessage","success","setSuccess","effectHook","phonebook","useEffect","Notification","className","handleUpdate","res","setTimeout","catch","error","event","target","preventDefault","find","window","confirm","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f2df564.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addPerson = person => {\r\n  const request = axios.post(baseUrl, person)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id, updatedPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, updatedPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, addPerson, deletePerson, updatePerson }","import React, { useState, useEffect } from 'react'\r\nimport phonebook from './services/phonebook'\r\nimport './index.css'\r\n\r\n//FullStack course 2020, tasks 2.6-2.12, 2.15-2.18, 2.19-2.20 Henrik Tarnanen\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [success, setSuccess] = useState(true)\r\n\r\n  const effectHook = () => {\r\n    phonebook.getAll().then(persons => setPersons(persons))\r\n  }\r\n\r\n  useEffect(effectHook, [])\r\n\r\n\r\n\r\n  const handleFilterChange = event => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const handleNameChange = event => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = event => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    //persons.find loops through the persons testing if a name matches\r\n    if (persons.find(person => person.name === newName)) {\r\n      if (window.confirm(`Are you sure you want to update the information of ${newName}?`)) {\r\n        //updatedPerson is for finding the ID to update the correct information\r\n        const updatedPerson = persons.find(person => person.name === newName)\r\n        handleUpdate(updatedPerson.id, { name: newName, number: newNumber })\r\n\r\n      }\r\n\r\n    }\r\n    else {\r\n      phonebook\r\n        .addPerson({ name: newName, number: newNumber })\r\n        .then(response => {\r\n          setPersons(persons.concat(response))\r\n          setSuccess(true)\r\n          setMessage(`Added ${newName} to the phonebook.`)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          //console.log(error.response.data.error)\r\n          setMessage(error.response.data.error)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n\r\n          }, 5000)\r\n        })\r\n\r\n      setNewName('')\r\n      setNewNumber('')\r\n    }\r\n  }\r\n\r\n  const handleDelete = (id, name) => {\r\n    if (window.confirm(\"Are you sure you want to delete this information?\")) {\r\n      phonebook\r\n        .deletePerson(id)\r\n        .then(response => {\r\n          setPersons(persons.filter(person => person.id !== id))\r\n          setSuccess(true)\r\n          setMessage(`Deleted ${name} from the phonebook.`)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          setSuccess(false)\r\n          setMessage(`${name} has been already deleted from the phonebook.`)\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  const Notification = ({ message, success }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    if (success) {\r\n      return (\r\n        <div className=\"notification\">\r\n          {message}\r\n        </div>)\r\n    }\r\n    return (\r\n      <div className=\"errorNotification\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //after a PUT-request, update the state, re-render and reset fields\r\n  const handleUpdate = (id, person) => {\r\n    phonebook\r\n      .updatePerson(id, person)\r\n      .then(res => {\r\n        effectHook()\r\n        setSuccess(true)\r\n        setMessage(`Modified ${newName} in the phonebook.`)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000)\r\n        setNewName('')\r\n        setNewNumber('')\r\n      })\r\n      //rejected promise handling\r\n      .catch(error => {\r\n        setSuccess(false)\r\n        setMessage(`${newName} has been already deleted from the phonebook.`)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} success={success} />\r\n      <FilterForm filter={filter} handleFilterChange={handleFilterChange} />\r\n      <h3>Add new people</h3>\r\n      <PersonForm\r\n        handleSubmit={handleSubmit}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <NumberList persons={persons} filter={filter.toLowerCase()} handleDelete={handleDelete} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\nconst PersonForm = props => {\r\n  //console.log(\"Personform props: \", props)\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst FilterForm = ({ filter, handleFilterChange }) => {\r\n  return (\r\n    <div>\r\n      Filter people by name: <input value={filter} onChange={handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst NumberList = ({ persons, filter, handleDelete }) => {\r\n  //filters the persons by the filter criterion, then creates Person-components\r\n  const temp = persons.filter(person => person.name.toLowerCase().includes(filter))\r\n  return (\r\n    <div>\r\n      {temp.map(person =>\r\n        <Person\r\n          key={person.id}\r\n          id={person.id}\r\n          name={person.name}\r\n          number={person.number}\r\n          handleDelete={handleDelete} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Person = props => {\r\n  return <div>Name: {props.name}, #{props.number} <button onClick={() => props.handleDelete(props.id, props.name)}>Delete</button></div>\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}